package retire;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;

public class RetirePanel extends JPanel {

	private RetireModel rm;
	
	private JMenuItem clearItem, closeItem;
	private ButtonListener listener;
	private JButton calc;
	private JButton reset;
	
	private JPanel butPanel;
	private JPanel qaPanel;
	
	private JLabel nameQ;
	private JTextField nameF;
	
	private JLabel sexQ;
	private JComboBox sexBox;
	private String[] sexString;
	
	private JLabel aTRQ;
	private String[] ageToRetire;
	private JComboBox aTRBox;
	
	private JLabel lifeExpQ;
	private String[] lifeExp;
	private JComboBox lifeExpCombo;
	
	private JLabel ageQ;
	private JLabel incomeQ;
	private JTextField ageF;
	private JTextField incomeF;
	
	private JLabel desiredSalary;
	private JTextField desiredSalaryField;
	
	private JLabel otherSalary;
	private JTextField otherSalaryField;
	
	private JLabel totalToSave;
	private JLabel totalTS;
	private JLabel totalToSaveMonthly;
	
	private JLabel pension;
	private JLabel savings;
	private JLabel otherJob;
	private JTextField pensionField;
	private JTextField savingsField;
	private JTextField otherJobField;
	
	private JPanel topPanel;
	private JPanel botPanel;
	
	private TitledBorder bt;
	private Border lb;
	private TitledBorder tt;
	
	private JButton exit;
	private JButton print;
	
	private JButton nameH;
	private JButton ageH;
	private JButton sexH;
	private JButton ageToRetireH;
	private JButton annualIncomeH;
	private JButton lifeExpH;
	private JButton desiredSalaryH;
	private JButton otherSalaryH;
	private JButton pensionH;
	private JButton savingsH;
	private JButton otherJobH;
	
	public RetirePanel(JMenuItem clearItem, JMenuItem closeItem) {
		super();
		this.clearItem = clearItem;
		this.closeItem = closeItem;
		rm = new RetireModel();
		
		setLayout(new BorderLayout());
		
		qaPanel = new JPanel();
		qaPanel.setLayout(new GridLayout(2, 2, 20, 20));
		// rows, columns, horizontal gap, vertical gap
		add(qaPanel, BorderLayout.CENTER);
		
		lb = BorderFactory.createEtchedBorder(EtchedBorder.LOWERED);
		bt = BorderFactory.createTitledBorder(lb, "Financial Information");
		tt = BorderFactory.createTitledBorder(lb, "Personal Information");
		
		tt.setTitleColor(Color.gray);
		bt.setTitleColor(Color.gray);
		
		topPanel = new JPanel();
		botPanel = new JPanel();
		topPanel.setLayout(new GridLayout(3, 3, 10, 20));
		botPanel.setLayout(new GridLayout(9, 3, 10, 20));
		botPanel.setBorder(bt);
		topPanel.setBorder(tt);
		
		topPanel.setSize(100, 800);
		
		qaPanel.add(topPanel);
		qaPanel.add(botPanel);
		
		setCombos();
		createButtons();
		setJLabels();
		setListen();
		setUpPanels();
	}
	
	public void setJLabels() {
		nameQ = new JLabel("Name:");
		nameF = new JTextField();
		
		ageQ = new JLabel("Age:");
		ageQ.setVisible(true);
		ageF = new JTextField();
		
		incomeQ = new JLabel("Annual Income:");
		incomeQ.setVisible(true);
		incomeF = new JTextField();
		
		desiredSalary = new JLabel("How much do you want to make while " +
				"in retirement?");
		desiredSalary.setVisible(true);
		desiredSalaryField = new JTextField();
		
		otherSalary = new JLabel("Do you have any other form of income");
		otherSalaryField = new JTextField();
		
		pension = new JLabel(" pension? If so, \n how much do" +
				" you have in it?");
		pensionField = new JTextField();
		
		savings = new JLabel("Do you have a savings account? If so, \n how" +
				" much do you have saved?");
		savingsField = new JTextField();
		
		otherJob = new JLabel("Do you plan on having a part time job \n" +
				"while retired? If so how much do you expect to make?");
		otherJobField = new JTextField();
		
		totalTS = new JLabel("How much you need to save: ");
		totalToSave = new JLabel("");
		totalToSaveMonthly = new JLabel("");
		
		sexQ = new JLabel("Are you male or female?");
		
		aTRQ = new JLabel("When do you want to retire?");
		aTRQ.setVisible(true);
		
		lifeExpQ = new JLabel("How long do you expect to live?");
	}

	private void setUpPanels() {
		topPanel.add(nameQ);
		topPanel.add(nameF);
		topPanel.add(nameH);
		
		topPanel.add(ageQ);
		topPanel.add(ageF);
		topPanel.add(ageH);
		
		topPanel.add(sexQ);
		topPanel.add(sexBox);
		topPanel.add(sexH);
		
		botPanel.add(aTRQ);
		botPanel.add(aTRBox);
		botPanel.add(ageToRetireH);
		
		botPanel.add(lifeExpQ);
		botPanel.add(lifeExpCombo);
		botPanel.add(lifeExpH);
		
		botPanel.add(incomeQ);
		botPanel.add(incomeF);
		botPanel.add(annualIncomeH);
		
		botPanel.add(desiredSalary);
		botPanel.add(desiredSalaryField);
		botPanel.add(desiredSalaryH);
		
		botPanel.add(pension);
		botPanel.add(pensionField);
		botPanel.add(pensionH);
		
		botPanel.add(savings);
		botPanel.add(savingsField);
		botPanel.add(savingsH);
		
		botPanel.add(otherJob);
		botPanel.add(otherJobField);
		botPanel.add(otherJobH);
		
		botPanel.add(otherSalary);
		botPanel.add(otherSalaryField);
		botPanel.add(otherSalaryH);
		
		botPanel.add(totalTS);
		botPanel.add(totalToSave);
		botPanel.add(totalToSaveMonthly);
	}
	
	public void setCombos() {
		sexString = new String[]{"Male", "Female"};
		sexBox = new JComboBox(sexString);
		
		ageToRetire = new String[]{" ", "55", "60", "65", "70"};
		aTRBox = new JComboBox(ageToRetire);
		
		lifeExp = new String[]{" ", "100", "1 day", "Over 9000"};
		lifeExpCombo = new JComboBox(lifeExp);                     
	}
	
	public void createButtons() {
		calc = new JButton("Show me the money!");
		reset = new JButton("Reset");
		print = new JButton("Print");
		exit = new JButton("Exit");
		
		nameH = new JButton("Help");
		ageH = new JButton("Help");
		sexH = new JButton("Help");
		ageToRetireH = new JButton("Help");
		annualIncomeH = new JButton("Help");
		lifeExpH = new JButton("Help");
		desiredSalaryH = new JButton("Help");
		otherSalaryH = new JButton("Help");
		pensionH = new JButton("Help");
		savingsH = new JButton("Help");
		otherJobH = new JButton("Help");
		
		nameH.setSize(5, 5);
		
		butPanel = new JPanel();
		butPanel.setLayout(new FlowLayout());
		butPanel.add(calc);
		butPanel.add(print);
		butPanel.add(reset);
		butPanel.add(exit);
		
		add(butPanel, BorderLayout.SOUTH);
	}
	
	private void setListen() {
		listener = new ButtonListener();
		
		nameH.addActionListener(listener);
		ageH.addActionListener(listener);
		sexH.addActionListener(listener);
		ageToRetireH.addActionListener(listener);
		annualIncomeH.addActionListener(listener);
		lifeExpH.addActionListener(listener);
		desiredSalaryH.addActionListener(listener);
		otherSalaryH.addActionListener(listener);
		pensionH.addActionListener(listener);
		savingsH.addActionListener(listener);
		otherJobH.addActionListener(listener);
		
		clearItem.addActionListener(listener);
		closeItem.addActionListener(listener);
		reset.addActionListener(listener);
		calc.addActionListener(listener);
		exit.addActionListener(listener);
		print.addActionListener(listener);
	}
	
	private void clearForm() {
		ageF.setText("");
		incomeF.setText("");
		otherSalaryField.setText("");
		desiredSalaryField.setText("");
		totalToSave.setText("");
	}
	
	private void calculate() {
		int i = sexBox.getSelectedIndex();
		if (i == 0)
			rm.setSex("male");
		else
			rm.setSex("female");
		
		System.out.println(""+ i);
		i = aTRBox.getSelectedIndex();
		if (i == 0) {
			System.out.println("OH NO!");
			System.exit(1);
		} else if (i == 1)
			rm.setAgeToRetire(55);
		else if (i == 2)
			rm.setAgeToRetire(60);
		else if (i == 3)
			rm.setAgeToRetire(65);
		else 
			rm.setAgeToRetire(70);
		
		System.out.println(""+ i);
		System.out.println(ageF.getText());
		System.out.println(incomeF.getText());
		System.out.println(desiredSalaryField.getText());
		System.out.println(otherSalaryField.getText());
		
		rm.setAge(Integer.parseInt(ageF.getText()));
		rm.setASalary(Integer.parseInt(incomeF.getText()));
		rm.setDSalary(Integer.parseInt(desiredSalaryField.getText()));
		rm.setOtherIncome(Integer.parseInt(otherSalaryField.getText()));
		totalToSave.setText("" + rm.calculate() + " every year");
	}
	
	private void print() {
		//TODO: Do print stuff, create a new JFrame
	}
	
	private class ButtonListener implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent event) {

			JComponent comp = (JComponent) event.getSource();
		
			if (comp == clearItem || comp == reset) 
				clearForm();
			
			if (comp == closeItem || comp == exit) 
				System.exit(0);
			
			if (comp == calc)
				calculate();
			
			if (comp == print)
				print();
		}
	}
}
